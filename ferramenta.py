import subprocess
import os

def print_banner():
    # Banner para a ferramenta
    banner = r"""
@@@@@%+..........................................................................+%@@@@@@
@@@@#-...............................:-=+*##*+==:.................................-#@@@@@
@@%=................................+@@@@@@@@@@@@#..................................+%@@@
@#:................................-%@@@@@@@@@@@@@=..................................-#@@
*..................................%@@@@@@@@@@@@@@%....................................#@
..................................=%@@@@@@@@@@@@@@@+....................................#
..........................:-==+**+=---=+*#%%#*+=---=+**+==--.............................
...........................:=*#%@@@@@%%#*+=-+*#%@@@@@@@%*=-..............................
................................-+%@@@@@@@@@@@@@@@@%+-:..................................
..................................:%@@@@@@@@@@@@@@@-.....................................
...................................=@@@@@@@@@@@@@@*......................................
....................................*@@@@@@@@@@@@%.......................................
:-=++=-..............................+%@@@@@@@@%+:...............................-=++=-:.
@@@@@@@%*-.............................-+%@@%*-...............................-*%@@@@@@@#
.......=@@*...............................==................................:#@@@:....%@@
..@@@..=@@@+........................:-...-@@*...--:.........................*@@@@*+:..%@@
..@@@..=@@@#..................:-+*%@@@*...*%...+@@@%#+=-....................%@@@@@@-..%@@
..@@@..=@@@*..............=*#%@@@@@@@@@=..+%..:%@@@@@@@@@%#*=:..............*@@@@@@-..%@@
.......=@@#..............*@@@@@@@@@@@@@%:.#@-.%@@@@@@@@@@@@@@%:.............:%@@@@@-..%@@
%%%%%%%%#=..............*@@@@@@@@@@@@@@@#:%@+#@@@@@@@@@@@@@@@@%:..............=#@@@%%%@@%
-=+**+=:...............=@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@*................:=+**+=-.
....:-................:%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+.................-......
.+-.:%+..............:%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=..............=%+.:+:..
.#@%#%@%-............#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-...........:#@@#%@@:..
.+%@@@@@@#+=-:......*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%.......-=+*%@@@@@%*...
...:=#%@@@@@@@@%#*+*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+*##%@@@@@@@@%+-.....
.......=@@@@@@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@*:........
.......-@@@@@@@@@@@@@@@@@%+.-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.=%@@@@@@@@@@@@@@@@@+.........
........:-+*#%@@@@@@@@@@%-...%@@@@@@@@@@@@@@@@@@@@@@@@@@@@%..:*@@@@@@@@@@%%*+=-.........:
..............:-=+*#%%@+.....#@@@@@@@@@@@@@@@@@@@@@@@@@@@@*....=%@%#*+=-:..............:%
%-....................:......+%%%%%%%%%%%%%%%%%%%%%%%%%%%%=...........................-%@
@%+..................................................................................*%@@
    """
    print(banner)

def run_command(command, output_file=None):
    """Run a shell command and save its output to a file."""
    with open(output_file, "w") if output_file else subprocess.PIPE as out:
        process = subprocess.Popen(command, shell=True, stdout=out, stderr=subprocess.PIPE, text=True)
        for line in process.stderr:
            print(line, end="")

def main():
    print_banner()

    # Solicita o domínio ao usuário
    target = input("Digite o domínio alvo (ex: target.com): ")

    # Caminho para salvar os arquivos de saída
    amass_output = f"{target}_amass.txt"
    nmap_output = f"{target}_nmap.txt"
    nuclei_output = f"{target}_nuclei.txt"

    # Comando do Amass
    print("\n[+] Executando Amass...")
    amass_cmd = f"amass enum -d {target}"
    run_command(amass_cmd, amass_output)

    # Comando do Nmap
    print("\n[+] Executando Nmap...")
    nmap_cmd = f"nmap -p- --open -sS {target}"
    run_command(nmap_cmd, nmap_output)

    # Comando do Nuclei com templates
    print("\n[+] Executando Nuclei...")
    nuclei_cmd = f"nuclei -u {target} -t /diretorio/templates"
    run_command(nuclei_cmd, nuclei_output)

    # Pergunta se deseja usar o resultado do Amass para novas execuções
    use_amass = input("\nDeseja usar o resultado do Amass para novas execuções com Nmap e Nuclei? (s/n): ").strip().lower()
    if use_amass == 's':
        with open(amass_output, "r") as amass_file:
            domains = [line.strip() for line in amass_file.readlines()]

        # Nmap e Nuclei para cada subdomínio do Amass
        amass_nmap_output = f"{target}_amass_nmap.txt"
        amass_nuclei_output = f"{target}_amass_nuclei.txt"

        for domain in domains:
            print(f"\n[+] Executando Nmap para {domain}...")
            run_command(f"nmap -p- --open -sS {domain}", amass_nmap_output)

            print(f"\n[+] Executando Nuclei para {domain}...")
            run_command(f"nuclei -u {domain} -t /diretorio/templates", amass_nuclei_output)

    print("\n[+] Todos os processos foram concluídos.")

if __name__ == "__main__":
    main()
